
      ## Special variables
      Default variable ............... $_
      Line number of read line ....... $.
      Input record separator ......... $/
      After print append ............. $\
      Output field separator ......... $,
      Array value separator .......... $"
      Arguments passed to perl ....... @ARGV
      Handle of current file ......... ARGV
      Fields of split input .......... @F
      Environment variables .......... %ENV
      Match from pattern match ....... $1, $2, ...
      Contents of last match ......... $&
      Record portion before match .... $`
      Record portion after match ..... $'
      Extension for file backup ...... $^I

      ## Character classes & more
      Word ........................... \w
      Non-word ....................... \W
      Whitespace ..................... \s
      Non-whitespace ................. \S
      Digit .......................... \d
      Non-digit ...................... \D
      Word boundary .................. \b
      Control character .............. \NNN
      Single quote (ctrl char) ....... \047

      ## String Modifiers
      Literal characters ............. \Q
      Uppercase all .................. \U
      Uppercase next ................. \u
      Lowercase all .................. \L
      Lowercase next ................. \l
      End case conversion ............ \E

      ## Modifiers
      Ignore case .................... i
      Expanded mode .................. x
      Single line mode ............... s
      Multiline mode ................. m
      Global ......................... g
      Evaluate ....................... e

      ## Help
      List perl help guides .......... man perl
      Search perldoc for function .... perldoc -f <func>
      Search perldoc for variable .... perldoc -v <var>

      ## Misc
      Convert find cmd to perl ....... find2perl <args>
      Get path for module ............ perldoc -lm <mod>
      Backup using seconds suffix .... perl -i.$SECONDS [...]
      Print range .................... perl -ne '/RE1/../RE2/ and print'
      Print range (min 2 lines) ...... perl -ne '/RE1/.../RE2/ and print'

