
      ## Shell Parameter Expansion
      Sub var if null ................ ${str:-sub}
      Sub var if not null ............ ${str:+sub}
      Assign to var if null .......... ${str:=sub}
      Sub var to stderr if null ...... ${str:?sub}
      Expand substring ............... ${str:offset:len}
      List vars starting with prefix . ${!prefix*}
      Print length of var ............ ${#var}
      Remove pattern: start/shortest . ${str#pattern}
      Remove pattern: start/longest .. ${str##pattern}
      Remove pattern: end/shortest ... ${str%pattern}
      Remove pattern: end/longest .... ${str%%pattern}

      ## Redirection
      Redirect stdout/stderr ......... > word 2>&1
      Redirect stdout/stderr ......... &> word
      Redirect/append stdout/stderr .. >> word 2>&1
      Redirect/append stdout/stderr .. &>> word

      ## Special Parameters
      IFS separated pos. params ...... $*
      Space separated pos. params .... $@
      Number of pos. params .......... $#
      Exit status of last process .... $?
      Current option flags ........... $-
      Pid of shell ................... $$
      Pid of most recent bg job ...... $!
      Name of shell or script ........ $0
      
      ## Event Designators
      Refer to cmd line n ............ !n
      Refer to cmd n lines back ...... !-n
      Refer to previous cmd .......... !!
      Refer to cmd starting with str . !str
      Refer to cmd containing str .... !?str[?]
      Repeat last command with sub ... ^str1^str2
      Cmdline typed so far ........... !#

      ## Word Designators
      The 0th word, usually the cmd .. :0
      The nth word ................... :n
      The 1st argument (word 1) ...... :^
      The last argument .............. :$
      Range of words ................. :x-y
      All words except the 0th ....... :*
      Words from x to the end ........ :x*

      ## Modifiers
      Remove trailing pathname ....... :h
      Remove leading pathname ........ :t
      Remove trailing suffix ......... :r
      Remove all but trailing suffix . :e
      Print but do not execute ....... :p

      ## Conditional Constructs
      Test if arith expr is non-zero . (( <...> ))
      Test var against regex ......... [[ $var =~ <regex> ]]

      ## Arrays
      Assign array ................... arr=(<vals>)
      Expand array ................... ${arr[@]}
      Get last element ............... ${arr[-1]}
      Expand length of array ......... ${#arr[@]}
      Expand subarray by length ...... ${arr[@]:offset:len}
      List array indices ............. ${!arr[*]}
      Delete array element ........... unset arr[ind]

      ## Debug
      Run script in debug mode ....... bash -x <script>

      ## Other
      Use original command ........... \<cmd>

